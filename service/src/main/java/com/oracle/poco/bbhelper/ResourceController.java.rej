diff a/service/src/main/java/com/oracle/poco/bbhelper/ResourceController.java b/service/src/main/java/com/oracle/poco/bbhelper/ResourceController.java	(rejected hunks)
@@ -41,17 +41,31 @@
      * @param fromdate
      * @param todate
      * @return 予約された会議を含む、各会議室の情報
+     * @throws BbhelperException 
      */
     @RequestMapping(value = "/invitations/list",
                     method = RequestMethod.GET)
     public ResourcesWithInvitationsInRange listInvitations(
+            @RequestHeader(SessionPool.HEADER_KEY_BBH_AUTHORIZED_SESSION)
+            String session_id,
             @RequestParam @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
             ZonedDateTime fromdate,
             @RequestParam @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
-            ZonedDateTime todate) {
+            ZonedDateTime todate) throws BbhelperException {
         LoggerManager.getLogger().info("/resources/invitations/list");
-        Collection<Invitation> invitations = InvitationCache.
-                getInstance().listConflictedInvitaitons(fromdate, todate);
+        TimeoutManagedContext context =
+                SessionPool.getInstance().get(session_id);
+        try {
+            URL host = new URL("https://stbeehive.oracle.com/");
+            BeehiveContext bc = BeehiveContext.getBeehiveContext(
+                    host, "hiroshi.hayakawa@oracle.com", "Mail&Simsa1");
+            context = new TimeoutManagedContext(bc);
+        } catch (MalformedURLException | Beehive4jException e) {
+            e.printStackTrace();
+            return null;
+        }
+        Collection<Invitation> invitations = InvitationUtils.
+                listConflictedInvitaitons(fromdate, todate, context);
         Collection<ResourceWithInvitationsInRange> resources = ResourceCache.
                 getInstance().getAllResources();
         // TODO ロジックの見直し
